Операторы, фильтрация, сортировка и ограничение

=======================================================

1. Пусть в таблице users поля created_at и updated_at оказались незаполненными. Заполните их текущими датой и временем.

=======================================================

mysql> update users set created_at=NOW(), updated_at=NOW();

=======================================================

2. Таблица users была неудачно спроектирована. Записи created_at и updated_at были заданы типом VARCHAR и в них долгое время помещались значения в формате "20.10.2017 8:10". Необходимо преобразовать поля к типу DATETIME, сохранив введеные ранее значения.

=======================================================

mysql> desc users;
+-------------+---------------------+------+-----+---------+----------------+
| Field       | Type                | Null | Key | Default | Extra          |
+-------------+---------------------+------+-----+---------+----------------+
| id          | bigint(20) unsigned | NO   | PRI | NULL    | auto_increment |
| name        | varchar(255)        | YES  |     | NULL    |                |
| birthday_at | date                | YES  |     | NULL    |                |
| created_at  | varchar(20)         | YES  |     | NULL    |                |
| updated_at  | varchar(20)         | YES  |     | NULL    |                |
+-------------+---------------------+------+-----+---------+----------------+
5 rows in set (0.00 sec)

mysql> select * from users;                                                                                           +----+--------------------+-------------+------------------+------------------+
| id | name               | birthday_at | created_at       | updated_at       |
+----+--------------------+-------------+------------------+------------------+
|  1 | Геннадий           | 1990-10-05  | 01.05.2020 00:00 | 01.05.2020 00:00 |
|  2 | Наталья            | 1984-11-12  | 01.05.2020 00:00 | 01.05.2020 00:00 |
|  3 | Александр          | 1985-05-20  | 01.05.2020 00:00 | 01.05.2020 00:00 |
|  4 | Сергей             | 1988-02-14  | 01.05.2020 00:00 | 01.05.2020 00:00 |
|  5 | Иван               | 1998-01-12  | 01.05.2020 00:00 | 01.05.2020 00:00 |
|  6 | Мария              | 1992-08-29  | 01.05.2020 00:00 | 01.05.2020 00:00 |
+----+--------------------+-------------+------------------+------------------+
6 rows in set (0.00 sec)

--сначала потренеруемся на селектах

mysql> select concat(substring(updated_at,7,4),"-",substring(updated_at,4,2),"-",substring(updated_at,1,2)," ",substring(updated_at,12,2),":",substring(updated_at,15,2)) as updated_at from users;
+------------------+
| updated_at       |
+------------------+
| 2020-05-01 00:00 |
| 2020-05-01 00:00 |
| 2020-05-01 00:00 |
| 2020-05-01 00:00 |
| 2020-05-01 00:00 |
| 2020-05-01 00:00 |
+------------------+
6 rows in set (0.01 sec)

mysql> select concat(substring(created_at,7,4),"-",substring(created_at,4,2),"-",substring(created_at,1,2)," ",substring(created_at,12,2),":",substring(created_at,15,2)) as created_at from users;
+------------------+
| created_at       |
+------------------+
| 2020-05-01 00:00 |
| 2020-05-01 00:00 |
| 2020-05-01 00:00 |
| 2020-05-01 00:00 |
| 2020-05-01 00:00 |
| 2020-05-01 00:00 |
+------------------+
6 rows in set (0.00 sec)

--теперь переделаем селекты в апдейты и обновим базу

mysql> update users set updated_at=concat(substring(updated_at,7,4),"-",substring(updated_at,4,2),"-",substring(updated_at,1,2)," ",substring(updated_at,12,2),":",substring(updated_at,15,2));
Query OK, 6 rows affected (0.01 sec)
Rows matched: 6  Changed: 6  Warnings: 0

mysql> update users set created_at=concat(substring(created_at,7,4),"-",substring(created_at,4,2),"-",substring(created_at,1,2)," ",substring(created_at,12,2),":",substring(created_at,15,2));
Query OK, 6 rows affected (0.03 sec)
Rows matched: 6  Changed: 6  Warnings: 0

--Ошибку допустила для updated_at, индексы в дата_формат куда-то поехали, скопировала значения из created_at в updated_at, они все равно после первого задания были одинаковыми

mysql> update users set updated_at=created_at;
Query OK, 6 rows affected (0.03 sec)
Rows matched: 6  Changed: 6  Warnings: 0

mysql> select * from users;                                                                                           +----+--------------------+-------------+------------------+------------------+
| id | name               | birthday_at | created_at       | updated_at       |
+----+--------------------+-------------+------------------+------------------+
|  1 | Геннадий           | 1990-10-05  | 2020-05-01 00:00 | 2020-05-01 00:00 |
|  2 | Наталья            | 1984-11-12  | 2020-05-01 00:00 | 2020-05-01 00:00 |
|  3 | Александр          | 1985-05-20  | 2020-05-01 00:00 | 2020-05-01 00:00 |
|  4 | Сергей             | 1988-02-14  | 2020-05-01 00:00 | 2020-05-01 00:00 |
|  5 | Иван               | 1998-01-12  | 2020-05-01 00:00 | 2020-05-01 00:00 |
|  6 | Мария              | 1992-08-29  | 2020-05-01 00:00 | 2020-05-01 00:00 |
+----+--------------------+-------------+------------------+------------------+
6 rows in set (0.00 sec)

--преобразую столбцы таблицы из varchar() в datetime

mysql> alter table users modify column updated_at DATETIME DEFAULT CURRENT_TIMESTAMP;
Query OK, 6 rows affected (0.09 sec)
Records: 6  Duplicates: 0  Warnings: 0

mysql> alter table users modify column created_at DATETIME DEFAULT CURRENT_TIMESTAMP;
Query OK, 6 rows affected (0.11 sec)
Records: 6  Duplicates: 0  Warnings: 0

--все значения сохранились. Конец.

mysql> select * from users;
+----+--------------------+-------------+---------------------+---------------------+
| id | name               | birthday_at | created_at          | updated_at          |
+----+--------------------+-------------+---------------------+---------------------+
|  1 | Геннадий           | 1990-10-05  | 2020-05-01 00:00:00 | 2020-05-01 00:00:00 |
|  2 | Наталья            | 1984-11-12  | 2020-05-01 00:00:00 | 2020-05-01 00:00:00 |
|  3 | Александр          | 1985-05-20  | 2020-05-01 00:00:00 | 2020-05-01 00:00:00 |
|  4 | Сергей             | 1988-02-14  | 2020-05-01 00:00:00 | 2020-05-01 00:00:00 |
|  5 | Иван               | 1998-01-12  | 2020-05-01 00:00:00 | 2020-05-01 00:00:00 |
|  6 | Мария              | 1992-08-29  | 2020-05-01 00:00:00 | 2020-05-01 00:00:00 |
+----+--------------------+-------------+---------------------+---------------------+
6 rows in set (0.00 sec)

==================================================

3. В таблице складских запасов storehouses_products в поле value могут встречаться самые разные цифры: 0, если товар закончился и выше нуля, если на складе имеются запасы. Необходимо отсортировать записи таким образом, чтобы они выводились в порядке увеличения значения value. Однако, нулевые запасы должны выводиться в конце, после всех записей.

==================================================

--есть идея только с использованием апдейта, который меняет 0 на любое значение больше максимального по этому полю

mysql> select * from storehouses_products;
+----+---------------+------------+-------+---------------------+---------------------+
| id | storehouse_id | product_id | value | created_at          | updated_at          |
+----+---------------+------------+-------+---------------------+---------------------+
|  1 |             6 |          6 |  1572 | 2020-05-01 00:54:54 | 2020-05-01 00:54:54 |
|  2 |             9 |          1 |     0 | 2020-05-01 00:54:43 | 2020-05-01 01:25:21 |
|  3 |            10 |          3 |  1313 | 2020-05-01 00:55:02 | 2020-05-01 00:55:02 |
|  4 |             2 |          9 |  7982 | 2020-05-01 00:54:35 | 2020-05-01 00:54:35 |
|  5 |             2 |          3 |  8064 | 2020-05-01 00:54:56 | 2020-05-01 00:54:56 |
|  6 |             2 |          3 |  6132 | 2020-05-01 00:54:44 | 2020-05-01 00:54:44 |
|  7 |             5 |          4 |     0 | 2020-05-01 00:54:49 | 2020-05-01 01:25:21 |
|  8 |            10 |          5 |  6798 | 2020-05-01 00:54:40 | 2020-05-01 00:54:40 |
|  9 |             1 |          9 |     0 | 2020-05-01 00:54:42 | 2020-05-01 01:25:21 |
| 10 |             6 |          9 |  6676 | 2020-05-01 00:54:41 | 2020-05-01 00:54:41 |
+----+---------------+------------+-------+---------------------+---------------------+
10 rows in set (0.00 sec)

mysql> select max(value) from storehouses_products;
+------------+
| max(value) |
+------------+
|       8064 |
+------------+


--меняем все нули на значение больше максимума, например на 99999

mysql> update storehouses_products set value=99999 where value=0;
Query OK, 3 rows affected (0.03 sec)
Rows matched: 3  Changed: 3  Warnings: 0

mysql> select * from storehouses_products order by value;
+----+---------------+------------+-------+---------------------+---------------------+
| id | storehouse_id | product_id | value | created_at          | updated_at          |
+----+---------------+------------+-------+---------------------+---------------------+
|  3 |            10 |          3 |  1313 | 2020-05-01 00:55:02 | 2020-05-01 00:55:02 |
|  1 |             6 |          6 |  1572 | 2020-05-01 00:54:54 | 2020-05-01 00:54:54 |
|  6 |             2 |          3 |  6132 | 2020-05-01 00:54:44 | 2020-05-01 00:54:44 |
| 10 |             6 |          9 |  6676 | 2020-05-01 00:54:41 | 2020-05-01 00:54:41 |
|  8 |            10 |          5 |  6798 | 2020-05-01 00:54:40 | 2020-05-01 00:54:40 |
|  4 |             2 |          9 |  7982 | 2020-05-01 00:54:35 | 2020-05-01 00:54:35 |
|  5 |             2 |          3 |  8064 | 2020-05-01 00:54:56 | 2020-05-01 00:54:56 |
|  2 |             9 |          1 | 99999 | 2020-05-01 00:54:43 | 2020-05-01 01:25:44 |
|  7 |             5 |          4 | 99999 | 2020-05-01 00:54:49 | 2020-05-01 01:25:44 |
|  9 |             1 |          9 | 99999 | 2020-05-01 00:54:42 | 2020-05-01 01:25:44 |
+----+---------------+------------+-------+---------------------+---------------------+
10 rows in set (0.00 sec)

--использую if, чтобы вывести 0 в конце

mysql> select id,storehouse_id,product_id,if(value<>99999,value,0) as value_upd,created_at,updated_at from storehouses_products order by value;
+----+---------------+------------+-----------+---------------------+---------------------+
| id | storehouse_id | product_id | value_upd | created_at          | updated_at          |
+----+---------------+------------+-----------+---------------------+---------------------+
|  3 |            10 |          3 |      1313 | 2020-05-01 00:55:02 | 2020-05-01 00:55:02 |
|  1 |             6 |          6 |      1572 | 2020-05-01 00:54:54 | 2020-05-01 00:54:54 |
|  6 |             2 |          3 |      6132 | 2020-05-01 00:54:44 | 2020-05-01 00:54:44 |
| 10 |             6 |          9 |      6676 | 2020-05-01 00:54:41 | 2020-05-01 00:54:41 |
|  8 |            10 |          5 |      6798 | 2020-05-01 00:54:40 | 2020-05-01 00:54:40 |
|  4 |             2 |          9 |      7982 | 2020-05-01 00:54:35 | 2020-05-01 00:54:35 |
|  5 |             2 |          3 |      8064 | 2020-05-01 00:54:56 | 2020-05-01 00:54:56 |
|  2 |             9 |          1 |         0 | 2020-05-01 00:54:43 | 2020-05-01 01:31:56 |
|  7 |             5 |          4 |         0 | 2020-05-01 00:54:49 | 2020-05-01 01:31:56 |
|  9 |             1 |          9 |         0 | 2020-05-01 00:54:42 | 2020-05-01 01:31:56 |
+----+---------------+------------+-----------+---------------------+---------------------+
10 rows in set (0.01 sec)


==================================================

4. (по желанию) Из таблицы users необходимо извлечь пользователей, родившихся в августе и мае. Месяцы заданы в виде списка английских названий ('may', 'august')

==================================================

mysql> select * from users;
+----+--------------------+-------------+---------------------+---------------------+
| id | name               | birthday_at | created_at          | updated_at          |
+----+--------------------+-------------+---------------------+---------------------+
|  1 | Геннадий           | 1990-10-05  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |
|  2 | Наталья            | 1984-11-12  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |
|  3 | Александр          | 1985-05-20  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |
|  4 | Сергей             | 1988-02-14  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |
|  5 | Иван               | 1998-01-12  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |
|  6 | Мария              | 1992-08-29  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |
|  7 | Геннадий           | 1990-10-05  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |
|  8 | Наталья            | 1984-11-12  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |
|  9 | Александр          | 1985-05-20  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |
| 10 | Сергей             | 1988-02-14  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |
| 11 | Иван               | 1998-01-12  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |
| 12 | Мария              | 1992-08-29  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |
+----+--------------------+-------------+---------------------+---------------------+
12 rows in set (0.00 sec)

mysql> select * from users where date_format(birthday_at,"%M") in ('may','august');
+----+--------------------+-------------+---------------------+---------------------+
| id | name               | birthday_at | created_at          | updated_at          |
+----+--------------------+-------------+---------------------+---------------------+
|  3 | Александр          | 1985-05-20  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |
|  6 | Мария              | 1992-08-29  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |
|  9 | Александр          | 1985-05-20  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |
| 12 | Мария              | 1992-08-29  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |
+----+--------------------+-------------+---------------------+---------------------+
4 rows in set (0.00 sec)

=====================================================

5. (по желанию) Из таблицы catalogs извлекаются записи при помощи запроса. SELECT * FROM catalogs WHERE id IN (5, 1, 2); Отсортируйте записи в порядке, заданном в списке IN.

======================================================

mysql> SELECT * FROM catalogs WHERE id IN (5, 1, 2) order by field(id,5,1,2);
+----+-------------------------------------+
| id | name                                |
+----+-------------------------------------+
|  5 | Оперативная память                  |
|  1 | Процессоры                          |
|  2 | Мат.платы                           |
+----+-------------------------------------+
3 rows in set (0.00 sec)

===============================================
===========Агрегация данных====================
===============================================

===============================================

1.Подсчитайте средний возраст пользователей в таблице users 

===============================================

mysql> select * from users;
+----+--------------------+-------------+---------------------+---------------------+
| id | name               | birthday_at | created_at          | updated_at          |
+----+--------------------+-------------+---------------------+---------------------+
|  1 | Геннадий           | 1990-10-05  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |
|  2 | Наталья            | 1984-11-12  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |
|  3 | Александр          | 1985-05-20  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |
|  4 | Сергей             | 1988-02-14  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |
|  5 | Иван               | 1998-01-12  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |
|  6 | Мария              | 1992-08-29  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |
|  7 | Геннадий           | 1990-10-05  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |
|  8 | Наталья            | 1984-11-12  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |
|  9 | Александр          | 1985-05-20  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |
| 10 | Сергей             | 1988-02-14  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |
| 11 | Иван               | 1998-01-12  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |
| 12 | Мария              | 1992-08-29  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |
+----+--------------------+-------------+---------------------+---------------------+
12 rows in set (0.00 sec)

mysql> select round(avg((to_days(now())-to_days(birthday_at))/365.25)) as total_age from users;
+-----------+
| total_age |
+-----------+
|        30 |
+-----------+
1 row in set (0.00 sec)

===================================================

2. Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели. Следует учесть, что необходимы дни недели текущего года, а не года рождения.

===================================================

mysql> select * from users;
+----+--------------------+-------------+---------------------+---------------------+
| id | name               | birthday_at | created_at          | updated_at          |
+----+--------------------+-------------+---------------------+---------------------+
|  1 | Геннадий           | 1990-10-05  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |
|  2 | Наталья            | 1984-11-12  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |
|  3 | Александр          | 1985-05-20  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |
|  4 | Сергей             | 1988-02-14  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |
|  5 | Иван               | 1998-01-12  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |
|  6 | Мария              | 1992-08-29  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |
|  7 | Геннадий           | 1990-10-05  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |
|  8 | Наталья            | 1984-11-12  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |
|  9 | Александр          | 1985-05-20  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |
| 10 | Сергей             | 1988-02-14  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |
| 11 | Иван               | 1998-01-12  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |
| 12 | Мария              | 1992-08-29  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |
+----+--------------------+-------------+---------------------+---------------------+
12 rows in set (0.00 sec)

mysql> select *,(weekday(concat(year(now()),"-",date_format(birthday_at,"%m"),"-",date_format(birthday_at,"%d")))+1) as week_day from users order by week_day;
+----+--------------------+-------------+---------------------+---------------------+----------+
| id | name               | birthday_at | created_at          | updated_at          | week_day |
+----+--------------------+-------------+---------------------+---------------------+----------+
|  1 | Геннадий           | 1990-10-05  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |        1 |
|  7 | Геннадий           | 1990-10-05  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |        1 |
|  3 | Александр          | 1985-05-20  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |        3 |
|  9 | Александр          | 1985-05-20  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |        3 |
|  2 | Наталья            | 1984-11-12  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |        4 |
|  8 | Наталья            | 1984-11-12  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |        4 |
|  4 | Сергей             | 1988-02-14  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |        5 |
| 10 | Сергей             | 1988-02-14  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |        5 |
|  6 | Мария              | 1992-08-29  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |        6 |
| 12 | Мария              | 1992-08-29  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |        6 |
|  5 | Иван               | 1998-01-12  | 2020-05-01 00:50:21 | 2020-05-01 00:50:21 |        7 |
| 11 | Иван               | 1998-01-12  | 2020-05-01 01:33:41 | 2020-05-01 01:33:41 |        7 |
+----+--------------------+-------------+---------------------+---------------------+----------+
12 rows in set (0.00 sec)

mysql> select (weekday(concat(year(now()),"-",date_format(birthday_at,"%m"),"-",date_format(birthday_at,"%d")))+1) as week_day,count(*) as nr_users from users group by week_day;
+----------+----------+
| week_day | nr_users |
+----------+----------+
|        1 |        2 |
|        3 |        2 |
|        4 |        2 |
|        5 |        2 |
|        6 |        2 |
|        7 |        2 |
+----------+----------+
6 rows in set (0.00 sec)

========================================================

3. (по желанию) Подсчитайте произведение чисел в столбце таблицы

========================================================

--чтобы обойти отсутствующую в mysql функцию, позволяющую умножить значения в столбце, можно возспользоваться свойствами логарифма и экспоненты.
Логарифм произведения равен сумме логарифмов. Экспонета возводится в степень суммы и мы получаем значение равное произведению заданных чисел. 

mysql> select exp(sum(log(1*2*3*4*5)));
+--------------------------+
| exp(sum(log(1*2*3*4*5))) |
+--------------------------+
|       119.99999999999997 |
+--------------------------+
1 row in set (0.00 sec)

